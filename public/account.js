document.addEventListener("DOMContentLoaded", () => {
    const token = localStorage.getItem("token");
    const userLevelSpan = document.getElementById("userLevel");
    const logoutButton = document.getElementById("logoutButton");
    const protocolContainer = document.getElementById("protocolContainer");
    const protocolTableBody = document.querySelector("#protocolTable tbody");
    const songsPollContainer = document.getElementById("songsPoll");
    const songsPollTableBody = document.querySelector("#songsPollTable tbody");

    if (!token) {
        alert("‚ùå –í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ!");
        window.location.href = "login.html";
        return;
    }

    // –ó–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ä—ñ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    fetch("/user/info", {
        headers: { "Authorization": `Bearer ${token}` }
    })
    .then(res => res.json())
    .then(data => {
        if (data.username) {
            userLevelSpan.textContent = data.level;

            // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á admin –∞–±–æ teacher, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–∞–±–ª–∏—Ü—é `Protocol`
            if (data.level === "admin" || data.level === "teacher") {
                protocolContainer.style.display = "block"; // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

                fetch("/user/protocol", {
                    headers: { "Authorization": `Bearer ${token}` }
                })
                .then(res => res.json())
                .then(protocolData => {
                    protocolTableBody.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
                    protocolData.forEach(row => {
                        const tr = document.createElement("tr");
                        tr.innerHTML = `
                            <td>${row.protocol_id}</td>
                            <td>${row.user_id}</td>
                            <td>${row.action}</td>
                            <td>${new Date(row.time).toLocaleString()}</td>
                        `;
                        protocolTableBody.appendChild(tr);
                    });
                })
                .catch(err => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ç–æ–∫–æ–ª—É:", err));

                // üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ `songsPoll`
                songsPollContainer.style.display = "block"; // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

                fetch("/user/songs-poll", {
                    headers: { "Authorization": `Bearer ${token}` }
                })
                .then(res => res.json())
                .then(songsData => {
                    songsPollTableBody.innerHTML = ""; // –û—á–∏—â–∞—î–º–æ –ø–µ—Ä–µ–¥ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
                    songsData.forEach(row => {
                        const tr = document.createElement("tr");
                        tr.innerHTML = `
                            <td>${row.user_id}</td>
                            <td>${row.username}</td>
                            <td>${row.first_place || "‚ùå –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"}</td>
                            <td>${row.second_place || "‚ùå –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"}</td>
                            <td>${row.third_place || "‚ùå –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö"}</td>
                        `;
                        songsPollTableBody.appendChild(tr);
                    });
                })
                .catch(err => console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:", err));
            }
        } else {
            logout();
        }
    })
    .catch(() => logout());

    // –í–∏—Ö—ñ–¥ –∑ –∞–∫–∫–∞—É–Ω—Ç–∞
    logoutButton.addEventListener("click", logout);
});

